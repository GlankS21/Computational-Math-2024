window._=x=>{let s=math.evaluate(x).toString();return"true"===s||"false"!==s&&s};const funcs=[["-3*x^3 - x^2 + x + 3"],["-2*x^3 - 4*x^2 + 8*x - 4"],["-2*x^3 - 3^2 + x + 5"]],methods=[[ailerSolve,"Эйлера"],[betterAilerSolve,"Улучшенный метод Эйлера"],[adamseSolve,"Адамса"]];let calculator=null;function onLoad(){let sel=document.getElementById("func-sel");funcs.forEach((f,i)=>{sel.innerHTML+=`\n            <option value="${i}">${f}</option>`});let msel=document.getElementById("method-sel");methods.forEach((m,i)=>{msel.innerHTML+=`\n            <option value="${i}">${m[1]}</option>`});var elt=document.getElementById("calculator");calculator=Desmos.GraphingCalculator(elt,{expressionsCollapsed:!0}),handleFuncSel(0)}let precision=.1;function handleMethodSel(val){calculator.getExpressions().forEach(e=>{e.id.startsWith("method")&&calculator.removeExpression({id:e.id})}),methods[val][0]()}let xs=[];function handleFuncSel(val){calculator.getExpressions().forEach(e=>{calculator.removeExpression({id:e.id})});let funcLeftBound=prompt("enter the left bound"),funcRightBound=prompt("enter the right bound"),pointsN=prompt("enter the number of points");precision=prompt("enter the precision"),(isNaN(+funcLeftBound)||isNaN(+funcRightBound)||isNaN(+pointsN)||isNaN(+precision))&&alert("wrong format!"),(+funcLeftBound>=+funcRightBound||pointsN<=1||precision<0)&&alert("wrong format!"),funcLeftBound=+funcLeftBound,funcRightBound=+funcRightBound,pointsN=+pointsN;let func=funcs[val],gap=(funcRightBound-funcLeftBound)/pointsN;xs.length=0;for(let i=funcLeftBound;i<=funcRightBound;i+=gap)xs.push(i);calculator.setExpression({id:"func",latex:func}),handleMethodSel(0),console.log(xs)}function arrayToTable(data){let table='<table border="1">';for(let i=0;i<data.length;i++){table+="<tr>";for(let j=0;j<data[0].length;j++)table+="<td>"+(data[i][j]||"")+"</td>";table+="</tr>"}return table+="</table>",table}function ailerSolve(){let xsOut=["x"],ysOut=["y"];document.getElementById("table-cont").innerHTML="";for(let i=0;i<xs.length-1;i++){let m=_(`(${xs[i]} + ${xs[i+1]}) / 2`),sol=lagr(m);xsOut.push(m),ysOut.push(sol),calculator.setExpression({id:"methodPoint"+i,latex:`(${m}, ${sol})`,color:Desmos.Colors.BLUE})}document.getElementById("result-points").innerHTML=arrayToTable([xsOut,ysOut])}function betterAilerSolve(){let xsOut=["x"],ysOut=["y"];document.getElementById("table-cont").innerHTML="";for(let i=0;i<xs.length-1;i++){let m=_(`(${xs[i]} + ${xs[i+1]}) / 2`),sol=lagr(m);xsOut.push(m),ysOut.push(sol),calculator.setExpression({id:"methodPoint"+i,latex:`(${m}, ${sol})`,color:Desmos.Colors.BLUE})}document.getElementById("result-points").innerHTML=arrayToTable([xsOut,ysOut])}function adamseSolve(){let xsOut=["x"],ysOut=["y"];document.getElementById("table-cont").innerHTML="";for(let i=0;i<xs.length-1;i++){let m=_(`(${xs[i]} + ${xs[i+1]}) / 2`),sol=lagr(m);xsOut.push(m),ysOut.push(sol),calculator.setExpression({id:"methodPoint"+i,latex:`(${m}, ${sol})`,color:Desmos.Colors.BLUE})}document.getElementById("result-points").innerHTML=arrayToTable([xsOut,ysOut])}